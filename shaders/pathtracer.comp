#version 450
layout(binding=0, rgba8) uniform writeonly image2D output_image;

layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

uint pcg_hash(uint in_state)
{
    uint state = in_state * 747796405u + 2891336453u;
    uint word = ((state >> ((state >> 28u) + 4u)) ^ state) * 277803737u;
    return (word >> 22u) ^ word;
}

float rand_float(inout uint seed) {
    seed = pcg_hash(seed);
    return seed / 4294967295.0;
}

void main() {
    ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
    ivec2 resolution = imageSize(output_image);

    vec2 uv = (pixel_coords - 0.5 * vec2(resolution)) / resolution.y;

    uint seed = pixel_coords.x + pixel_coords.y * resolution.x;

    float v = rand_float(seed);

    vec4 color = vec4(v, v, v, 1.0);

    imageStore(output_image, pixel_coords, color);
}